#include <Wire.h>
#include "Arduino.h"
#include "Arduino_BHY2.h"

Sensor gas(SENSOR_ID_GAS);
Sensor pres(SENSOR_ID_BARO);
Sensor temp(SENSOR_ID_TEMP);
SensorBSEC bsec(SENSOR_ID_BSEC);
SensorBSEC2 bsec2(SENSOR_ID_BSEC2);

const uint8_t BSEC2CONFIG[1943] = { 0, 1, 6, 2, 189, 1, 0, 0, 0, 0, 0, 0, 127, 7, 0, 0, 56, 0, 1, 0, 0, 168, 19, 73, 64, 49, 119, 76, 0, 0, 97, 69, 0, 0, 97, 69, 10, 0, 3, 0, 0, 0, 96, 64, 23, 183, 209, 56, 43, 24, 149, 60, 140, 74, 106, 188, 43, 24, 149, 60, 216, 129, 243, 190, 151, 255, 80, 190, 216, 129, 243, 190, 8, 0, 2, 0, 0, 0, 72, 66, 16, 0, 3, 0, 10, 215, 163, 60, 10, 215, 35, 59, 10, 215, 35, 59, 13, 0, 5, 0, 0, 0, 0, 0, 100, 254, 131, 137, 87, 88, 0, 9, 0, 7, 240, 150, 61, 0, 0, 0, 0, 0, 0, 0, 0, 28, 124, 225, 61, 52, 128, 215, 63, 0, 0, 160, 64, 0, 0, 0, 0, 0, 0, 0, 0, 205, 204, 12, 62, 103, 213, 39, 62, 230, 63, 76, 192, 0, 0, 0, 0, 0, 0, 0, 0, 145, 237, 60, 191, 251, 58, 64, 63, 177, 80, 131, 64, 0, 0, 0, 0, 0, 0, 0, 0, 93, 254, 227, 62, 54, 60, 133, 191, 0, 0, 64, 64, 12, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 45, 5, 11, 0, 0, 0, 2, 239, 157, 147, 62, 122, 236, 202, 187, 178, 81, 243, 62, 184, 215, 133, 62, 168, 95, 89, 62, 138, 166, 212, 62, 48, 54, 68, 62, 106, 43, 141, 62, 74, 71, 177, 62, 203, 120, 163, 62, 204, 19, 181, 62, 38, 128, 18, 62, 183, 47, 180, 61, 72, 88, 118, 62, 156, 118, 131, 62, 195, 158, 55, 62, 0, 0, 0, 0, 37, 168, 216, 61, 55, 143, 150, 62, 215, 232, 112, 62, 165, 149, 10, 190, 80, 72, 16, 62, 45, 33, 53, 189, 0, 0, 0, 0, 196, 178, 241, 190, 25, 98, 177, 61, 70, 95, 12, 190, 32, 176, 55, 191, 226, 0, 196, 62, 130, 0, 177, 62, 210, 172, 137, 62, 187, 188, 110, 191, 222, 147, 18, 190, 16, 21, 18, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 145, 254, 190, 62, 166, 149, 189, 20, 199, 107, 190, 101, 255, 191, 190, 88, 11, 8, 63, 75, 49, 176, 62, 119, 141, 70, 61, 223, 253, 117, 190, 248, 215, 98, 191, 113, 195, 221, 60, 243, 156, 184, 190, 52, 143, 138, 189, 218, 80, 40, 62, 137, 235, 132, 190, 104, 15, 232, 61, 2, 176, 171, 62, 36, 106, 79, 62, 0, 12, 99, 190, 226, 79, 47, 190, 244, 147, 9, 62, 87, 100, 174, 190, 221, 217, 45, 62, 77, 140, 156, 62, 248, 54, 223, 190, 167, 81, 59, 190, 185, 165, 222, 62, 241, 247, 176, 62, 97, 12, 162, 190, 40, 72, 245, 190, 118, 247, 174, 62, 91, 42, 125, 190, 78, 182, 47, 190, 216, 230, 138, 60, 246, 179, 70, 61, 92, 23, 247, 62, 49, 91, 134, 61, 68, 117, 104, 62, 166, 160, 182, 61, 11, 164, 178, 190, 196, 223, 172, 62, 254, 164, 131, 61, 131, 166, 32, 60, 244, 131, 156, 190, 71, 175, 149, 189, 41, 231, 14, 190, 119, 76, 4, 63, 245, 161, 129, 62, 110, 125, 129, 191, 194, 76, 168, 190, 62, 165, 132, 62, 222, 225, 104, 190, 123, 205, 164, 62, 81, 202, 7, 63, 129, 148, 207, 190, 9, 105, 38, 63, 39, 0, 103, 61, 189, 80, 145, 62, 142, 48, 23, 191, 221, 183, 187, 61, 225, 95, 142, 61, 25, 127, 83, 191, 95, 167, 163, 63, 35, 218, 4, 191, 233, 186, 33, 63, 33, 69, 132, 189, 3, 62, 196, 190, 140, 53, 74, 62, 193, 43, 224, 190, 139, 49, 169, 63, 177, 175, 253, 190, 115, 168, 15, 63, 221, 166, 167, 62, 229, 221, 128, 191, 143, 63, 36, 190, 53, 205, 56, 187, 230, 28, 194, 190, 131, 179, 251, 190, 138, 198, 148, 189, 236, 251, 40, 62, 45, 239, 78, 61, 150, 240, 30, 191, 207, 62, 209, 62, 24, 4, 70, 191, 115, 220, 41, 63, 164, 156, 199, 61, 4, 117, 151, 190, 203, 95, 43, 63, 171, 175, 223, 190, 53, 103, 112, 61, 180, 165, 189, 190, 56, 208, 214, 62, 113, 21, 106, 62, 172, 210, 218, 59, 49, 77, 196, 189, 73, 34, 157, 62, 31, 63, 31, 63, 123, 162, 163, 61, 117, 120, 159, 190, 189, 199, 170, 62, 26, 248, 220, 62, 30, 129, 210, 189, 33, 53, 132, 63, 251, 60, 75, 63, 73, 61, 47, 63, 93, 241, 241, 189, 231, 50, 158, 191, 126, 104, 125, 189, 195, 222, 177, 63, 112, 190, 8, 191, 117, 110, 169, 191, 241, 18, 236, 62, 75, 22, 146, 62, 12, 167, 164, 63, 83, 243, 188, 189, 183, 49, 91, 63, 120, 140, 40, 191, 157, 30, 206, 190, 152, 62, 65, 63, 94, 98, 9, 190, 207, 213, 81, 191, 75, 38, 142, 191, 235, 65, 244, 190, 243, 1, 156, 62, 145, 242, 60, 63, 184, 219, 181, 190, 192, 228, 169, 189, 189, 76, 2, 191, 39, 212, 97, 63, 112, 1, 226, 190, 177, 124, 159, 189, 144, 16, 186, 62, 12, 6, 58, 63, 140, 169, 15, 61, 182, 191, 194, 60, 19, 170, 81, 62, 240, 35, 5, 191, 246, 231, 225, 61, 240, 150, 73, 191, 123, 123, 226, 61, 247, 34, 252, 190, 4, 240, 14, 63, 176, 26, 207, 62, 128, 75, 113, 190, 96, 12, 133, 61, 56, 172, 165, 62, 33, 112, 80, 190, 136, 240, 9, 191, 155, 228, 224, 60, 192, 72, 24, 63, 200, 205, 233, 190, 63, 204, 40, 60, 238, 93, 21, 63, 148, 41, 162, 61, 96, 5, 4, 189, 54, 1, 40, 63, 15, 252, 126, 62, 252, 43, 247, 61, 86, 40, 79, 61, 32, 143, 243, 62, 133, 57, 17, 191, 185, 13, 163, 189, 149, 196, 75, 189, 30, 222, 175, 190, 98, 225, 223, 62, 4, 247, 11, 62, 230, 87, 243, 62, 150, 197, 22, 190, 141, 222, 228, 190, 250, 176, 38, 63, 249, 202, 248, 62, 23, 151, 16, 191, 222, 24, 211, 189, 165, 133, 224, 61, 9, 250, 28, 63, 32, 115, 114, 191, 143, 116, 110, 190, 53, 140, 17, 191, 149, 176, 173, 62, 136, 142, 126, 190, 188, 198, 167, 62, 66, 184, 126, 63, 128, 139, 61, 63, 172, 9, 6, 63, 135, 151, 170, 190, 115, 103, 84, 63, 26, 101, 4, 191, 113, 49, 151, 188, 5, 93, 94, 190, 50, 82, 67, 63, 59, 131, 182, 189, 21, 185, 137, 63, 155, 234, 18, 191, 214, 3, 156, 191, 0, 0, 0, 0, 148, 70, 31, 63, 76, 34, 193, 60, 203, 175, 34, 191, 0, 0, 0, 0, 208, 70, 227, 62, 248, 241, 182, 63, 23, 118, 214, 191, 0, 0, 0, 0, 91, 218, 61, 191, 139, 56, 133, 63, 176, 55, 106, 62, 0, 0, 0, 0, 184, 185, 208, 62, 254, 138, 151, 188, 160, 152, 46, 191, 0, 0, 0, 0, 36, 84, 175, 190, 21, 207, 158, 191, 206, 98, 145, 63, 0, 0, 0, 0, 185, 183, 160, 62, 40, 11, 227, 62, 90, 153, 76, 62, 0, 0, 0, 0, 159, 200, 90, 62, 214, 2, 143, 63, 232, 188, 147, 190, 0, 0, 0, 0, 67, 55, 51, 63, 185, 229, 206, 190, 99, 27, 62, 63, 0, 0, 0, 0, 98, 226, 102, 191, 140, 81, 80, 191, 143, 76, 130, 63, 0, 0, 0, 0, 10, 10, 3, 46, 111, 136, 72, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 146, 39, 74, 7, 59, 34, 74, 209, 31, 29, 74, 128, 39, 118, 72, 187, 15, 129, 72, 213, 58, 133, 72, 103, 208, 22, 66, 126, 108, 247, 65, 22, 111, 196, 71, 230, 231, 189, 72, 0, 0, 128, 63, 0, 0, 128, 63, 0, 0, 128, 63, 181, 69, 129, 74, 94, 88, 121, 74, 136, 156, 112, 74, 215, 46, 170, 72, 167, 69, 179, 72, 120, 108, 185, 72, 72, 243, 211, 64, 172, 174, 141, 63, 52, 43, 190, 68, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 145, 1, 254, 0, 2, 1, 5, 48, 117, 100, 0, 44, 1, 112, 23, 151, 7, 132, 3, 197, 0, 92, 4, 144, 1, 64, 1, 64, 1, 144, 1, 48, 117, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 48, 117, 48, 117, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 8, 7, 100, 0, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 48, 117, 100, 0, 100, 0, 100, 0, 48, 117, 48, 117, 100, 0, 100, 0, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 44, 1, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 8, 7, 8, 7, 8, 7, 8, 7, 112, 23, 112, 23, 112, 23, 112, 23, 112, 23, 112, 23, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 112, 23, 112, 23, 112, 23, 112, 23, 255, 255, 255, 255, 220, 5, 220, 5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 220, 5, 220, 5, 220, 5, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 255, 48, 117, 0, 1, 0, 5, 0, 2, 0, 10, 0, 30, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 5, 0, 64, 1, 100, 0, 100, 0, 100, 0, 200, 0, 200, 0, 200, 0, 64, 1, 64, 1, 64, 1, 10, 1, 0, 0, 0, 0, 0, 120, 2, 0, 0 };

struct SensorData {
  uint16_t iaq;
  uint16_t iaq_s;
  float b_voc_eq;
  uint32_t co2_eq;
  uint8_t bsec_accu;
  float comp_t;
  float comp_h;
  uint32_t comp_g;
  float gasVal;
  float presVal;
  float tempValue;
  uint8_t gas0;
  uint8_t gas1;
  uint8_t gas2;
  uint8_t gas3;
  uint8_t bsec2_accu;
};

SensorData sensorData;

void setup() {
  // Serial.begin(115200);
  BHY2.begin();
  while (!BHY2.begin()) { (1); }
  Wire.begin(0x10);              // join i2c bus with address #2
  Wire.onRequest(requestEvent);  // register event
  gas.begin();
  pres.begin();
  temp.begin();
  bsec.begin();
  while (!bsec.begin()) { (1); }
  sensortec.bhy2_bsec2_setConfigString(BSEC2CONFIG, sizeof(BSEC2CONFIG) / sizeof(BSEC2CONFIG[0]));
  bsec2.begin();
  while (!bsec2.begin()) { (1); }
}

void loop() {
  static auto printTime = millis();  //
  BHY2.update();                     // Update function should be continuously polled
  sensorData.iaq = bsec.iaq();
  sensorData.iaq_s = bsec.iaq_s();
  sensorData.b_voc_eq = bsec.b_voc_eq();
  sensorData.co2_eq = bsec.co2_eq();
  sensorData.bsec_accu = bsec.accuracy();
  sensorData.comp_t = bsec.comp_t();
  sensorData.comp_h = bsec.comp_h();
  sensorData.comp_g = bsec.comp_g();
  sensorData.gasVal = gas.value();
  sensorData.presVal = pres.value();
  sensorData.tempValue = temp.value();
  sensorData.gas0 = bsec2.gas_estimates0();
  sensorData.gas1 = bsec2.gas_estimates1();
  sensorData.gas2 = bsec2.gas_estimates2();
  sensorData.gas3 = bsec2.gas_estimates3();
  sensorData.bsec2_accu = bsec2.accuracy();
}

void requestEvent() {
  static uint8_t batch = 0;
  const uint8_t chunkSize = 32;  // Chunk size to match buffer limit
  uint8_t* dataPtr = (uint8_t*)&sensorData;
  if (batch == 0) {
    Wire.write(dataPtr, chunkSize);  // Send first chunk
  } else if (batch == 1) {
    Wire.write(dataPtr + chunkSize, sizeof(SensorData) - chunkSize);  // Send remaining bytes
  }
  batch = (batch + 1) % 2;  // Toggle batch
}